#if !canImport(ObjectiveC)
import XCTest

extension CoercionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CoercionTests = [
        ("testBoolCoercion", testBoolCoercion),
        ("testDateCoercion", testDateCoercion),
        ("testDoubleCoercion", testDoubleCoercion),
        ("testIntCoercion", testIntCoercion),
        ("testStringCoercion", testStringCoercion),
        ("testUIntCoercion", testUIntCoercion),
    ]
}

extension ConverterProtocolTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ConverterProtocolTests = [
        ("testDouble", testDouble),
        ("testInt", testInt),
        ("testString", testString),
    ]
}

extension ConverterTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ConverterTests = [
        ("testDouble", testDouble),
        ("testInt", testInt),
        ("testString", testString),
    ]
}

extension DictionaryCoercionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DictionaryCoercionTests = [
        ("testDouble", testDouble),
        ("testInt", testInt),
        ("testOverridingConverter", testOverridingConverter),
        ("testString", testString),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(CoercionTests.__allTests__CoercionTests),
        testCase(ConverterProtocolTests.__allTests__ConverterProtocolTests),
        testCase(ConverterTests.__allTests__ConverterTests),
        testCase(DictionaryCoercionTests.__allTests__DictionaryCoercionTests),
    ]
}
#endif
